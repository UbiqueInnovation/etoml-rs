config_file = { SOI ~ "{"? ~ (component_use | section | function | global_symbol | component_definition)* ~ "}"? ~ EOI }

global_symbol = {"global" ~ property ~ ";"?}

identifier = @{ "$"? ~ ASCII_ALPHA ~ (ASCII_ALPHANUMERIC | "_")* }

section_char = @{ (!("]") ~ ANY)+ }

section = { "[" ~ section_char ~ "]" ~ ";"?  ~ config_element* }
property = {key ~ "=" ~ value }
config_element = { property ~ (!(";" ~",") ~ ";" )? }

key = @{ identifier ~ ("." ~ identifier)* }

value = {  string_concat| component_use | string | environment_variable | bool|function | key | number | array | object}
array = { "[" ~ (value ~  ("," ~ value)*)? ~ ","? ~ "]" }

object = {
    "{" ~
    (config_element ~ ","?)* ~ ","?
    ~ "}"
}

bool = {"true" | "false"}

number = {scientific | float | integer}
float = @{ "-"? ~ ASCII_DIGIT+ ~( "." ~ ASCII_DIGIT*)? }
scientific = @{ float ~ ("E" | "e") ~ float }
integer = @{ ASCII_DIGIT+ }
environment_variable = {"${" ~ identifier ~ "}"}
value_without_string_concat = { string | environment_variable |component_use | bool|function | key | number | array | object }
string_concat = { value_without_string_concat ~ ("+" ~ value_without_string_concat)+ }

normal_string = {PUSH("\"") ~ WHITESPACE* ~ string_content ~ WHITESPACE* ~ POP }
string = @{raw_string | normal_string}
raw_string = { "r" ~ PUSH("\""+) ~ WHITESPACE* ~ string_content ~ WHITESPACE* ~ POP }
string_content = !{ string_char *}
string_char = { !(PEEK) ~ ANY }

function = { "function" ~ identifier ~ "(" ~ (function_argument ~ ("," ~ function_argument)* )? ~ ")" ~ ":" ~ function_type ~ "{" ~ function_body ~ "}"  }
function_argument = { identifier ~ ":" ~ function_type }
function_body = { (statement)* }
statement = { "let " ~ identifier ~  "=" ~ value ~ ";" }

component_type_value = {"value"}
component_type_section = {"section"}
component_definition_value =  !{ "component" ~"[" ~ component_type_value ~"]" ~ identifier ~ "(" ~ (identifier ~ ("," ~ identifier)*)? ~")" ~ "{" ~ value+ ~ "}"}
component_definition_section =  !{ "component" ~"[" ~ component_type_section ~"]" ~ identifier ~ "(" ~ (identifier ~ ("," ~ identifier)*)? ~")" ~ "{" ~ section+ ~ "}"}
component_definition = {component_definition_section | component_definition_value}
component_use = {"@" ~ identifier ~"(" ~ (value ~ ("," ~ value)* )? ~ ")" ~ ""}

function_type = {
    "bool" |
    "String" |
    "i32" |
    "u32" |
    "i64"|
    "u64"|
    "f32" |
    "f64" |
    "Request" |
    "Response" |
    "Void"
}

WHITESPACE = _{ " " | "\t" | NEWLINE}
COMMENT = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }